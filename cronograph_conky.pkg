#!/bin/bash
#
# _________        ____  ____________         _______ ___________________
# ______  /__________  |/ /___  ____/________ ___    |__  ____/___  ____/
# _  __  / __  ___/__    / ______ \  ___  __ \__  /| |_  /     __  __/
# / /_/ /  _  /    _    |   ____/ /  __  /_/ /_  ___ |/ /___   _  /___
# \__,_/   /_/     /_/|_|  /_____/   _  .___/ /_/  |_|\____/   /_____/
#                                    /_/           drxspace@gmail.com
#

WIZDIR="$(cd "$(dirname "$0")" && pwd)"

CONKYDIR="$HOME"/.conky
CRONODIR="cronograph_blk"

THISAPPNAME="Cronograph Station Conky BLK"
THISAPPVER=$(cat "${WIZDIR}"/"${CRONODIR}"/.version)
THISAPPBLD=$(cat "${WIZDIR}"/"${CRONODIR}"/.build)

okay_x_col=$(($(tput cols)-7))

installApp () {
	case $1 in
	-i) # Install
		echo -e "\nInstalling “${THISAPPNAME}”"
		echo -en "Creating new directory "${CONKYDIR}"/"
		mkdir -p "${CONKYDIR}/" && echo -e "\r\033[${okay_x_col}C[ OK ]"
		echo -en "Coping directory "${WIZDIR}"/"${CRONODIR}" to "${CONKYDIR}"/"
		cp -r "${WIZDIR}"/"${CRONODIR}"/ "${CONKYDIR}"/ && echo -e "\r\033[${okay_x_col}C[ OK ]"
	;;
	-r) # Reinstall
		echo -en "Removing directory "${CONKYDIR}"/"${CRONODIR}""
		rm -rf "${CONKYDIR}"/"${CRONODIR}"/ && echo -e "\r\033[${okay_x_col}C[ OK ]"
		echo -en "Coping directory "${WIZDIR}"/"${CRONODIR}" to "${CONKYDIR}"/"
		cp -r "${WIZDIR}"/"${CRONODIR}"/ "${CONKYDIR}"/ && echo -e "\r\033[${okay_x_col}C[ OK ]"
	;;
	-u) # Update
		echo -en "Backing up previous version"
		( cd "${CONKYDIR}"/;
		  tar czf "${CRONODIR}"_$(cat "${CONKYDIR}"/"${CRONODIR}"/.build).tar.gz "${CRONODIR}"/; ) && echo -e "\r\033[${okay_x_col}C[ OK ]"
		installApp -r
	;;
	esac
}

finale () {
	case $1 in
	0)
		echo -e "\nThank you for using this wizard.
Have fun, love and joy ...and don't forget... anything else...
\033[1mput it on the weather\033[0m :-)" && sleep 6
	;;
	1|2|4)
		echo -e "\nBye!" && sleep 1
	;;
	3)
		echo -e "\nThere's an error while installing packages..." 1>&2 && sleep 4
	;;
	esac

	exit $1
}

# MAIN script starts here
clear

echo -e "\E[37;44m+------------------------------------------------------------------------+"
echo -e "|                                                                        |"
echo -e "|                     \E[1;37;44m${THISAPPNAME^^}\E[0;37;44m                       |"
echo -e "|                           ver. \E[1;31;44m${THISAPPVER}-${THISAPPBLD}\E[37;44m                              |"
echo -e "|                                                                        |"
echo -e "|                         \E[1;33;44mINSTALLATION WIZARD\E[37;44m                            |"
echo -e "|                                                                        |"
echo -e "+------------------------------------------------------------------------+"
tput sgr0 2>/dev/null

echo -e "\nThis wizard will help you install the “${THISAPPNAME}”
conky on your computer."
read -p "Do you want to continue? [Y/n]: " ANS
[[ ${ANS:-Y} != [Yy] ]] && finale 1

# Building needed packages list
NeedPackages=""
[[ -x $(which conky) ]] || NeedPackages="conky-all "
#[[ -x $(which wget) ]] || NeedPackages=$NeedPackages"wget "
[[ -x $(which curl) ]] || NeedPackages=$NeedPackages"curl "
# conky-all package includes lualib
#[[ -x $(which lua5.3) ]] || NeedPackages=$NeedPackages"lua5.3 "
[[ -x $(which hddtemp) ]] || NeedPackages=$NeedPackages"hddtemp "
[[ -x $(which sensors) ]] || NeedPackages=$NeedPackages"lm-sensors"

if [[ -n $NeedPackages ]]; then
	echo -e "\nFirst we need to install some packages. This action requires root
privileges and for this reason we may ask for your root password.
Packages that would be installed are: \033[1m$NeedPackages\033[0m"
	read -p "Do you want to continue? [Y/n]: " ANS
	[[ ${ANS:-Y} != [Yy] ]] && finale 2
	sudo echo -e "Installing needed packages. Please wait a moment..." || finale 3
	sudo apt-get -qq install --no-install-recommends $NeedPackages 2> /dev/null || finale 3
else
	kill -SIGTERM $(pidof conky) 2>/dev/null
fi

# Settind the hddtemp service to run as daemon and start the daemon
if [[ -n $(grep '^RUN_DAEMON.*"false"' /etc/default/hddtemp) ]]; then
	echo -e "\nFor the HDD temperature meter to work we need to set the
hddtemp service to run as daemon otherwise you'll get a N/A message.
This action requires root privileges and for this reason we may
ask for your root password."
	read -p "Do you want to install the hddtemp service as daemon? [Y/n]: " ANS
	if [[ ${ANS:-Y} == [Yy] ]]; then
		sudo sed -i '/RUN_DAEMON/s/false/true/' /etc/default/hddtemp
		sudo service hddtemp restart
		echo -e "Install the hddtemp service as daemon...\r\033[${okay_x_col}C[ OK ]"
	fi
fi

# Update an already installed version
if [[ -d "${CONKYDIR}"/"${CRONODIR}"/ ]]; then
	if [[ -f "${CONKYDIR}"/"${CRONODIR}"/.version ]]; then
		if [[ ${THISAPPBLD} = $(cat "${CONKYDIR}"/"${CRONODIR}"/.build) ]]; then
			echo -e "\nSeems that a build of this conky is already installed and it's current."
			read -p "Do you want to reinstall it? [y/N]: " ANS
			[[ ${ANS:-N} != [yY] ]] && finale 4
			installApp -r
		elif [[ ${THISAPPBLD} > $(cat "${CONKYDIR}"/"${CRONODIR}"/.build) ]]; then
			echo -e "\nSeems that an older build of this conky is already installed.
If you choose to update your version, the previous version will be
backed up to a file called “${CRONODIR}_$(cat "${CONKYDIR}"/"${CRONODIR}"/.build).tar.gz” and placed
inside the "${CONKYDIR}" directory."
			read -p "Do you want to update your version? [Y/n]: " ANS
			[[ ${ANS:-Y} != [Yy] ]] && finale 5
			installApp -u
		fi
	fi
else # New installation
	installApp -i
fi

### ADDITIONAL TASKS

# Configuring temperature
echo -e "\nChoose the desired output unit of all objects displaying a temperature.
Parameters are either “celsius” or “fahrenheit”.
The default unit is degree Celsius."
read -p "Celsius or Fahrenheit? [C/f]: " ANS
echo -en "Setting the temperature unit..."
if [[ ${ANS:-C} == [Ff] ]]; then
	sed -i 's/^#temperature_unit/temperature_unit/' "${CONKYDIR}"/"${CRONODIR}"/cronorc
	sed -i 's/^#DegreesUnits/DegreesUnits/' "${CONKYDIR}"/"${CRONODIR}"/yahooweather/forecasts.sh
fi
echo -e "\r\033[${okay_x_col}C[ OK ]"

# Installing application's icon... anyway
#if [[ ! -f "$HOME"/.icon/cronograph.png ]]; then
	echo -en "\nInstaling the “${THISAPPNAME}” icon..."
	mkdir -p "$HOME"/.icons
	cp "${WIZDIR}"/icons/cronograph_256x256.png "$HOME"/.icons/cronograph.png 2> /dev/null
	echo -e "\r\033[${okay_x_col}C[ OK ]"
#fi

# Installing needed truetype weather fonts... anyway
#if [[ -z $(fc-list | grep ConkyWeather) ]]; then
	echo -e "\nFor this conky to work properly we have to install some truetype fonts."
	mkdir -p "$HOME"/.fonts/TTF/
	echo -en "Coping fonts. Please wait a moment..."
	cp -f "${WIZDIR}"/ttf-cronograph/*.ttf "$HOME"/.fonts/TTF/ 2> /dev/null
	echo -e "\r\033[${okay_x_col}C[ OK ]"

	if [[ ! -f "$HOME"/.config/fontconfig/fonts.conf ]] && [[ ! -f "$HOME"/.fonts.conf ]]; then
		echo -e "\nFont configuration files aren't present."
		echo -e "For this conky to show its elements aligned in the right position
we should provide one."
		read -p "Do you want to create a font configuration file? [Y/n]: " ANS
		[[ ${ANS:-Y} == [Yy] ]] && {
			mkdir -p "$HOME"/.config/fontconfig/
			echo -en "Creating font configuration file. Please wait a moment..."
			cp -f "${WIZDIR}"/fontconfig/fonts.conf "$HOME"/.config/fontconfig/
			echo -e "\r\033[${okay_x_col}C[ OK ]"
		}
	fi
	echo -en "Building font information cache files. Please wait a moment..."
	fc-cache -f &> /dev/null
	echo -e "\r\033[${okay_x_col}C[ OK ]"
#fi

# Add this conky to the Startup Applications list
#if [[ ! -f "$HOME"/.config/autostart/cronograph_conky.desktop ]]; then
	echo -e "\nIt's essential to add this conky to the Startup Applications list
in order to start automatically each time we login to our system."
	read -p "Do you want to add this conky to the Startup Applications list? [Y/n]: " ANS
	[[ ${ANS:-Y} == [Yy] ]] && {
		mkdir -p "$HOME"/.config/autostart;
		sed "s:<home_dir>:"$HOME":" "${WIZDIR}"/cronograph_conky.desktop > "$HOME"/.config/autostart/cronograph_conky.desktop;
		chmod 755 "$HOME"/.config/autostart/cronograph_conky.desktop;
		echo -e "Setting “${THISAPPNAME}” as a Startup Application...\r\033[${okay_x_col}C[ OK ]";
	}
#fi

echo -e "\nThe conky “${THISAPPNAME}” is installed ok!"
read -p "Do you want to start the conky right now? [Y/n]: " ANS
[[ ${ANS:-Y} == [Yy] ]] && "${CONKYDIR}"/"${CRONODIR}"/start_crono.sh

echo -e "\nIt's \033[1mhighly recommended\033[0m to logout and login back." && sleep 5

finale 0

