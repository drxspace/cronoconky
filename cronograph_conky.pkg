#!/bin/bash
#
# _________        ____  ____________         _______ ___________________
# ______  /__________  |/ /___  ____/________ ___    |__  ____/___  ____/
# _  __  / __  ___/__    / ______ \  ___  __ \__  /| |_  /     __  __/
# / /_/ /  _  /    _    |   ____/ /  __  /_/ /_  ___ |/ /___   _  /___
# \__,_/   /_/     /_/|_|  /_____/   _  .___/ /_/  |_|\____/   /_____/
#                                    /_/           drxspace@gmail.com
#

WIZDIR="$(cd "$(dirname "$0")" && pwd)"

CONKYDIR="$HOME"/.conky
CRONODIR="cronograph_se"

THISAPPNAME="Conky Cronograph Station SE"
THISAPPVER=$(cat "${WIZDIR}"/"${CRONODIR}"/.version)
THISAPPBLD=$(cat "${WIZDIR}"/"${CRONODIR}"/.build)

installApp () {
	case $1 in
	-i) # Install
		echo -e "\nInstalling..."
		echo -en "Creating new directory "${CONKYDIR}"/"
		mkdir -p "${CONKYDIR}/" && echo -e "\t\t[OK]"
		echo -en "Coping directory "${WIZDIR}"/"${CRONODIR}" to "${CONKYDIR}"/"
		cp -r "${WIZDIR}"/"${CRONODIR}"/ "${CONKYDIR}"/ && echo -e "\t\t[OK]"
	;;
	-r) # Reinstall
		echo -en "Removing directory "${CONKYDIR}"/"${CRONODIR}""
		rm -rf "${CONKYDIR}"/"${CRONODIR}"/ && echo -e "\t\t[OK]"
		echo -en "Coping directory "${WIZDIR}"/"${CRONODIR}" to "${CONKYDIR}"/"
		cp -r "${WIZDIR}"/"${CRONODIR}"/ "${CONKYDIR}"/ && echo -e "\t\t[OK]"
	;;
	-u) # Update
		echo -en "Backing up previous version"
		( cd "${CONKYDIR}"/;
		  tar czf "${CRONODIR}"_$(cat "${CONKYDIR}"/"${CRONODIR}"/.build).tar.gz "${CRONODIR}"/; )  && echo -e "\t\t[OK]"
		installApp -r # It's a... recursion
	;;
	esac
}

finale () {
	case $1 in
	0)
		echo -e "\nThank you for using this wizard.
Have fun, love and joy ...and don't forget... anything else...
\033[1mput it on the weather\033[0m :-)" && sleep 6
	;;
	1|2|4)
		echo -e "\nBye!" && sleep 1
	;;
	3)
		echo -e "\nThere's an error while installing packages..." 1>&2 && sleep 4
	;;
	esac
	
	exit $1
}

# MAIN script starts here
clear

echo -e "\E[37;44m+------------------------------------------------------------------------+"
echo -e "|                                                                        |"
echo -e "|                     \E[1;37;44m${THISAPPNAME^^}\E[0;37;44m                        |"
echo -e "|                            ver. \E[30;44m${THISAPPVER}b${THISAPPBLD}\E[37;44m                               |"
echo -e "|                                                                        |"
echo -e "|                         \E[32;44mINSTALLATION WIZARD\E[37;44m                            |"
echo -e "|                                                                        |"
echo -e "+------------------------------------------------------------------------+"
tput sgr0 2>/dev/null

echo -e "\nThis wizard will help you to install the \"${THISAPPNAME}\"
conky on your computer."
read -p "Do you want to continue? [Y/n]: " ANS
[[ ${ANS:-Y} != [Yy] ]] && finale 1

# Building needed packages list
NeedPacks=""
[[ -z $(which conky) ]] && NeedPacks="conky-std"
[[ -z $(which hddtemp) ]] && NeedPacks=$NeedPacks" hddtemp"
[[ -z $(which sensors) ]] && NeedPacks=$NeedPacks" lm-sensors"

if [[ -n $NeedPacks ]]; then
	echo -e "\nFirst we need to install some packages. This action requires root
privileges and for this reason we'll may ask for your root password.
Packages that would be installed are: \033[1m$NeedPacks\033[0m"
	read -p "Do you want to continue? [Y/n]: " ANS
	[[ ${ANS:-Y} != [Yy] ]] && finale 2
	sudo echo "Installing needed packages. Please wait a moment..." || finale 3
	sudo apt-get -qq install --no-install-recommends conky-std hddtemp lm-sensors 2> /dev/null || finale 3
else
	kill -SIGTERM $(pidof conky) 2>/dev/null
fi

# Settind the hddtemp service to run as daemon and start the daemon
if [[ -n $(grep '^RUN_DAEMON.*"false"' /etc/default/hddtemp) ]]; then
	echo -e "\nFor the HDD temperature meter to work we need to set the
hddtemp service to run as daemon otherwise you'll get a N/A message.
This action requires root privileges and for this reason we'll may
ask for your root password."
	read -p "Do you want to install the hddtemp service as daemon? [Y/n]: " ANS
	if [[ ${ANS:-Y} == [Yy] ]]; then
		sudo sed -i '/RUN_DAEMON/s/false/true/' /etc/default/hddtemp
		sudo /etc/init.d/hddtemp restart
	fi
fi

# Update an already installed version
if [[ -d "${CONKYDIR}"/"${CRONODIR}"/ ]]; then
	if [[ -f "${CONKYDIR}"/"${CRONODIR}"/.version ]]; then
		if [[ ${THISAPPBLD} = $(cat "${CONKYDIR}"/"${CRONODIR}"/.build) ]]; then
			echo -e "\nSeems that a build of this conky is already installed and it's current."
			read -p "Do you want to reinstall it? [y/N]: " ANS
			[[ ${ANS:-N} == [nN] ]] && finale 4
			installApp -r
		elif [[ ${THISAPPBLD} > $(cat "${CONKYDIR}"/"${CRONODIR}"/.build) ]]; then
			echo -e "\nSeems that an older build of this conky is already installed.
If you choose to update your version, the previous version will be
backed up to a file called \""${CRONODIR}"_$(cat "${CONKYDIR}"/"${CRONODIR}"/.build).tar.gz\" and placed
inside the "${CONKYDIR}" directory."
			read -p "Do you want to update your version? [Y/n]: " ANS
			[[ ${ANS:-Y} != [Yy] ]] && finale 5
			installApp -u
		fi
	fi
else # New installation
	installApp -i
fi

### ADDITIONAL TASKS

# Configuring temperature
echo -e "\nChoose the desired output unit of all objects displaying a temperature.
Parameters are either \"celsius\" or \"fahrenheit\".
The default unit is degree Celsius."
read -p "Celsius or Fahrenheit? [C/f]: " ANS
echo -e "Setting the temperature unit..."
if [[ ${ANS:-C} == [Cc] ]]; then
	sed -i 's/<temper>/celsius/' "${CONKYDIR}"/"${CRONODIR}"/conkyrc
else	
	sed -i 's/<temper>/fahrenheit/' "${CONKYDIR}"/"${CRONODIR}"/conkyrc
	sed -i 's/^#metric/metric/' "${CONKYDIR}"/"${CRONODIR}"/accuweather/forecasts.sh
fi	

# Installing application's icon
if [[ ! -f "$HOME"/.icon/cronograph.png ]]; then
	echo -e "\nInstaling the Conky Cronograph Station SE icon..."
	mkdir -p "$HOME"/.icons
	cp "${WIZDIR}"/icons/cronograph_64x64.png "$HOME"/.icons/cronograph.png 2> /dev/null
fi

# Installing needed truetype weather fonts [---]
if [[ -z $(fc-list | grep ConkyWeather) ]];  then
	echo -e "\nFor this conky to work properly we have to install some truetype fonts."
	mkdir -p "$HOME"/.fonts
	echo -e "Coping fonts and building font information cache files.\nPlease wait a moment..."
	cp -r "${WIZDIR}"/ttf-cronograph/ "$HOME"/.fonts/ 2> /dev/null && fc-cache -f &> /dev/null
fi

# Add this conky to the Startup Applications list
if [[ ! -f "$HOME"/.config/autostart/cronograph_conky.desktop ]]; then
	echo -e "\nIt's essential to add this conky to the Startup Applications list
in order to start automatically each time we login to our system."
	read -p "Do you want to add this conky to the Startup Applications list? [Y/n]: " ANS
	[[ ${ANS:-Y} == [Yy] ]] \
	&& { mkdir -p "$HOME"/.config/autostart;\
	     sed "s:<home_dir>:"$HOME":" "${WIZDIR}"/cronograph_conky.desktop > "$HOME"/.config/autostart/cronograph_conky.desktop; }
fi

echo -e "\nThe conky \"${THISAPPNAME}\" is installed ok!"
read -p "Do you want to start the conky right now? [Y/n]: " ANS
[[ ${ANS:-Y} == [Yy] ]] && "${CONKYDIR}"/"${CRONODIR}"/start_crono.sh

finale 0

